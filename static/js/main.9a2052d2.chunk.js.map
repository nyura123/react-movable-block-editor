{"version":3,"sources":["EditorToolBar.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","button","margin","spacing","fab","textField","marginLeft","marginRight","width","input","display","MyEditorToolBar","props","_useState","useState","_useState2","Object","slicedToArray","selectedMenu","setSelectedMenu","classes","toggleMenu","menu","renderColorMenuItem","which","_props$value","value","byId","focusedNodeId","selectedNode","react_default","a","createElement","Fragment","EditorToolBar_ColorButton","onClick","color","style","position","zIndex","lib","undefined","onChange","_ref","hex","updateBlock","defineProperty","breadCrumbsProps","_props$value2","rootNodeId","focusedNode","focusNode","btnCls","Tooltip","title","aria-label","Button","className","addRow","addCol","addLayer","addMarkDown","addImage","parentId","alert","numRowsStr","window","prompt","numColsStr","widthStr","heightStr","Math","min","parseInt","height","_addCol","newValue","table","createdBlock","tableId","id","numRows","max","numCols","i","_addRow","row","j","_addCol2","col","addTable","paddingLeft","moveInDirection","ArrowBack_default","ArrowForward_default","ArrowUpward_default","ArrowDownward_default","copyFocused","paste","removeFocused","Delete_default","react_movable_block_editor_es_production","assign","onSelect","nodeId","node","prop","numeric","map","blockProp","TextField","key","label","event","target","type","InputLabelProps","shrink","ColorButton","size","borderWidth","fontSize","borderStyle","justifyContent","borderRadius","backgroundColor","breadcrumbNav","listStyleType","padding","flexDirection","breadcrumbItem","cursor","&::before","content","App","copiedNode","container1","name","childrenIds","layer1","top","left","subheading","image1","row1","editorState","setEditorState","UiComponent","controlUiProps","navClassName","itemClassName","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9a2052d2.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport {\n  BlockBreadCrumbs,\n  BlockEditorControlUIProps,\n  addCol,\n  addRow,\n  BlockEditorValue,\n} from 'react-movable-block-editor';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ArrowLeftIcon from '@material-ui/icons/ArrowBack';\nimport ArrowRightIcon from '@material-ui/icons/ArrowForward';\nimport ArrowUpIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownIcon from '@material-ui/icons/ArrowDownward';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\n\nimport { SketchPicker } from 'react-color';\n\ntype BlockProp =\n  | 'width'\n  | 'height'\n  | 'top'\n  | 'left'\n  | 'borderWidth'\n  | 'borderBottomWidth'\n  | 'borderStyle';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  fab: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 60,\n  },\n  input: {\n    display: 'none',\n  },\n}));\n\nexport type MenuType = 'color' | 'backgroundColor';\n\nexport interface BlockEditorControlDefaultUIState {\n  selectedMenu: MenuType | null;\n}\n\n// Create our own menu bar\nexport const MyEditorToolBar: React.SFC<BlockEditorControlUIProps> = (\n  props: BlockEditorControlUIProps\n) => {\n  const [selectedMenu, setSelectedMenu] = useState<MenuType | null>(null);\n\n  const classes = useStyles();\n\n  const toggleMenu = (menu: MenuType) => {\n    setSelectedMenu(selectedMenu === menu ? null : menu);\n  };\n\n  const renderColorMenuItem = (which: 'color' | 'backgroundColor') => {\n    const {\n      value: { byId, focusedNodeId },\n    } = props;\n\n    if (!focusedNodeId) return;\n    const selectedNode = focusedNodeId ? byId[focusedNodeId] : null;\n    return (\n      <React.Fragment>\n        <ColorButton\n          onClick={() => toggleMenu(which)}\n          color={selectedNode[which]}\n        />\n        {selectedMenu === which && (\n          <div style={{ position: 'absolute', zIndex: 100 }}>\n            <SketchPicker\n              color={selectedNode[which] || undefined}\n              onChange={({ hex }) => {\n                props.updateBlock(focusedNodeId, { [which]: hex });\n                toggleMenu(which);\n              }}\n            />\n          </div>\n        )}\n      </React.Fragment>\n    );\n  };\n\n  const {\n    breadCrumbsProps,\n    value: { byId, rootNodeId, focusedNodeId },\n  } = props;\n\n  const focusedNode = focusedNodeId ? byId[focusedNodeId] : null;\n\n  const { focusNode } = props;\n\n  const btnCls = classes.button;\n\n  const handleBlockChange = (\n    nodeId: string,\n    prop: BlockProp,\n    numeric: boolean\n  ) => (event: { target: { value: string } }) => {\n    props.updateBlock(nodeId, {\n      [prop]: numeric\n        ? event.target.value\n          ? parseInt(event.target.value, 10)\n          : undefined\n        : event.target.value,\n    });\n  };\n\n  const blockProps = [\n    { prop: 'width', numeric: true },\n    { prop: 'height', numeric: true },\n    { prop: 'top', numeric: true },\n    { prop: 'left', numeric: true },\n    { prop: 'borderWidth', numeric: true },\n    { prop: 'borderTopWidth', numeric: true },\n    { prop: 'borderBottomWidth', numeric: true },\n    { prop: 'borderLeftWidth', numeric: true },\n    { prop: 'borderRightWidth', numeric: true },\n    { prop: 'borderStyle', numeric: false },\n  ] as Array<{ prop: BlockProp; numeric: boolean }>;\n\n  return (\n    <div>\n      <div>\n        <Tooltip\n          title=\"Add Row (position children horizontally)\"\n          aria-label=\"Add\"\n        >\n          <Button\n            aria-label=\"add row\"\n            className={btnCls}\n            onClick={() => props.addRow()}\n          >\n            + Row\n          </Button>\n        </Tooltip>\n        <Tooltip\n          title=\"Add Col (position children vertically)\"\n          aria-label=\"Add\"\n        >\n          <Button\n            aria-label=\"add column\"\n            className={btnCls}\n            onClick={() => props.addCol()}\n          >\n            + Col\n          </Button>\n        </Tooltip>\n\n        <Tooltip\n          title=\"Add Layer (position children absolutely)\"\n          aria-label=\"Add\"\n        >\n          <Button\n            aria-label=\"add layer\"\n            className={btnCls}\n            onClick={() => props.addLayer()}\n          >\n            + Layer\n          </Button>\n        </Tooltip>\n        <Tooltip title=\"Add Text (markdown)\" aria-label=\"Add\">\n          <Button\n            aria-label=\"add markdown\"\n            className={btnCls}\n            onClick={() => props.addMarkDown()}\n          >\n            + Text\n          </Button>\n        </Tooltip>\n        <Button\n          aria-label=\"add image\"\n          className={btnCls}\n          onClick={() => props.addImage()}\n        >\n          + Image\n        </Button>\n        <Button\n          aria-label=\"add image\"\n          className={btnCls}\n          onClick={() => {\n            props.onChange(addTable(props.value.focusedNodeId, props.value));\n          }}\n        >\n          + Table\n        </Button>\n      </div>\n\n      {focusedNode && (\n        <div style={{ paddingLeft: 15 }}>\n          {renderColorMenuItem('color')}\n          {renderColorMenuItem('backgroundColor')}\n          <Button\n            className={btnCls}\n            onClick={() => props.moveInDirection(focusedNode.id, 'left')}\n          >\n            <ArrowLeftIcon />\n          </Button>\n          <Button\n            className={btnCls}\n            onClick={() => props.moveInDirection(focusedNode.id, 'right')}\n          >\n            <ArrowRightIcon />\n          </Button>\n          <Button\n            className={btnCls}\n            onClick={() => props.moveInDirection(focusedNode.id, 'up')}\n          >\n            <ArrowUpIcon />\n          </Button>\n          <Button\n            className={btnCls}\n            onClick={() => props.moveInDirection(focusedNode.id, 'down')}\n          >\n            <ArrowDownIcon />\n          </Button>\n\n          <Button\n            aria-label=\"copy\"\n            className={btnCls}\n            onClick={() => props.copyFocused()}\n          >\n            Copy\n          </Button>\n          <Button\n            aria-label=\"paste\"\n            className={btnCls}\n            onClick={() => props.paste()}\n          >\n            Paste\n          </Button>\n\n          <Button\n            aria-label=\"delete\"\n            className={classes.fab}\n            onClick={props.removeFocused}\n          >\n            <DeleteIcon />\n          </Button>\n          <Tooltip\n            title=\"Click breadcrumb to change focused block\"\n            aria-label=\"Add\"\n          >\n            <Button>\n              <BlockBreadCrumbs\n                onSelect={nodeId => focusNode(nodeId, true)}\n                byId={byId}\n                node={focusedNode}\n                {...breadCrumbsProps}\n              />\n            </Button>\n          </Tooltip>\n          <div>\n            {blockProps.map(blockProp => (\n              <TextField\n                key={'prop_' + blockProp.prop}\n                label={blockProp.prop}\n                value={\n                  focusedNode[blockProp.prop] === undefined\n                    ? ''\n                    : focusedNode[blockProp.prop]\n                }\n                onChange={handleBlockChange(\n                  focusedNode.id,\n                  blockProp.prop,\n                  blockProp.numeric\n                )}\n                type={blockProp.numeric ? 'number' : undefined}\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                margin=\"normal\"\n              />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst ColorButton = (props: { color: string; onClick: () => any }) => (\n  <Button\n    size=\"small\"\n    style={{\n      borderWidth: 1,\n      fontSize: 11,\n      borderStyle: 'solid',\n      justifyContent: 'flex-start',\n    }}\n    onClick={props.onClick}\n  >\n    <div style={{ display: 'flex' }}>\n      <div\n        style={{\n          borderWidth: 1,\n          borderRadius: 3,\n          borderStyle: 'solid',\n          width: 20,\n          height: 20,\n          backgroundColor: props.color || undefined,\n        }}\n      />\n      &nbsp;{!props.color ? 'none' : ''}\n    </div>\n  </Button>\n);\n\nfunction addTable(parentId: string | null, value: BlockEditorValue) {\n  if (!parentId) {\n    alert('Please select node to add table to');\n    return value;\n  }\n  let numRowsStr = window.prompt('Enter number or rows (max 10)', '5');\n  if (numRowsStr === null) return value;\n  let numColsStr = window.prompt('Enter number or columns (max 10)', '5');\n  if (numColsStr === null) return value;\n  let widthStr = window.prompt('Enter table width (max 400)', '300');\n  if (widthStr === null) return value;\n  let heightStr = window.prompt('Enter table height (max 400)', '300');\n  if (heightStr === null) return value;\n\n  const width = Math.min(parseInt(widthStr, 10), 400);\n  const height = Math.min(parseInt(heightStr, 10), 400);\n\n  const { value: newValue, createdBlock: table } = addCol(value, {\n    width,\n    height,\n    parentId,\n  });\n  if (!table) return value;\n  value = newValue;\n  const tableId = table.id;\n\n  const numRows = Math.max(1, Math.min(parseInt(numRowsStr, 10), 10));\n  const numCols = Math.max(1, Math.min(parseInt(numColsStr, 10), 10));\n\n  for (let i = 0; i < numRows; ++i) {\n    const { value: newValue, createdBlock: row } = addRow(value, {\n      height: height / numRows,\n      parentId: tableId,\n      // borderWidth: 0,\n      // borderBottomWidth: i === 0 ? 1 : 0,\n    });\n    if (!row) break;\n    value = newValue;\n    for (let j = 0; j < numCols; ++j) {\n      const { value: newValue, createdBlock: col } = addCol(value, {\n        parentId: row.id,\n        height: row.height,\n        width: row.width / numCols,\n        // borderWidth: 0,\n        // borderRightWidth: j === numCols - 1 ? 0 : 1,\n        // display: 'flex',\n        // flexDirection: 'column',\n        // justifyContent: 'center',\n      });\n      if (!col) break;\n      value = newValue;\n    }\n  }\n  return value;\n}\n","import React from 'react';\nimport { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { makeStyles } from '@material-ui/styles';\n\nimport {\n  BlockEditor,\n  Preview,\n  BlockEditorControl,\n  BlockEditorValue,\n} from 'react-movable-block-editor';\nimport 'react-movable-block-editor/css/drag.css';\nimport 'react-resizable/css/styles.css';\nimport { MyEditorToolBar } from './EditorToolBar';\n\n// optional: customize BreadCrumbs classes\nconst useStyles = makeStyles({\n  breadcrumbNav: {\n    display: 'flex',\n    listStyleType: 'none',\n    backgroundColor: '#f5f5f5',\n    padding: 10,\n    flexDirection: 'row',\n  },\n  breadcrumbItem: {\n    cursor: 'pointer',\n    '&::before': { content: '\"  /  \"' },\n    marginRight: 5,\n  },\n});\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n\n  const [editorState, setEditorState] = useState<BlockEditorValue>({\n    copiedNode: null,\n    focusedNodeId: 'layer1',\n    byId: {\n      container1: {\n        id: 'container1',\n        type: 'col',\n        name: 'container1',\n        parentId: null, // root\n        width: 500,\n        height: 300,\n        childrenIds: ['layer1'],\n      },\n      layer1: {\n        id: 'layer1',\n        type: 'layer',\n        name: 'layer1',\n        parentId: 'container1',\n        width: 510,\n        height: 310,\n        childrenIds: ['title', 'subheading', 'content', 'image1', 'row1'],\n      },\n      title: {\n        id: 'title',\n        type: 'markdown',\n        name: 'title',\n        parentId: 'layer1',\n        color: '#4A90E2',\n        backgroundColor: '#E9E9E9',\n        width: 450,\n        height: 30,\n        top: -10,\n        left: 10,\n        value: '## Title',\n        childrenIds: [],\n      },\n      subheading: {\n        id: 'subheading',\n        type: 'markdown',\n        name: 'subheading',\n        parentId: 'layer1',\n        width: 450,\n        height: 40,\n        top: 30,\n        left: 10,\n        value: '#### Subheading',\n        childrenIds: [],\n      },\n      image1: {\n        id: 'image1',\n        type: 'image',\n        name: 'image1',\n        parentId: 'layer1',\n        width: 200,\n        height: 200,\n        top: 90,\n        left: 10,\n        value: 'http://lorempixel.com/200/200/',\n        childrenIds: [],\n      },\n      content: {\n        id: 'content',\n        type: 'markdown',\n        name: 'content',\n        parentId: 'layer1',\n        width: 240,\n        height: 40,\n        top: 90,\n        left: 220,\n        value: '### Content',\n        childrenIds: [],\n      },\n      row1: {\n        id: 'row1',\n        type: 'row',\n        name: 'row1',\n        parentId: 'layer1',\n        width: 240,\n        height: 40,\n        top: 230,\n        left: 220,\n        childrenIds: [],\n      },\n    },\n    rootNodeId: 'container1',\n  });\n\n  return (\n    <div>\n      <BlockEditorControl\n        value={editorState}\n        onChange={setEditorState}\n        UiComponent={MyEditorToolBar}\n        controlUiProps={{\n          breadCrumbsProps: {\n            navClassName: classes.breadcrumbNav,\n            itemClassName: classes.breadcrumbItem,\n          },\n        }}\n      />\n\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'space-between',\n          flexDirection: 'row',\n        }}\n      >\n        <BlockEditor value={editorState} onChange={setEditorState} />\n        <div style={{ marginLeft: 30, borderWidth: 1, borderStyle: 'dashed' }}>\n          <Preview\n            byId={editorState.byId}\n            node={editorState.byId[editorState.rootNodeId]}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}